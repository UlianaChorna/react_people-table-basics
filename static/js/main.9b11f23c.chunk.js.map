{"version":3,"sources":["components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleList.tsx","api.ts","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Loader","className","PersonLink","person","name","sex","slug","to","pathname","classNames","PeopleList","people","slugPerson","useParams","getPersonName","find","map","born","died","fatherName","motherName","mother","father","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useEffect","catch","finally","length","hasActive","isActive","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9b11f23c.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, sex, slug } = person;\n\n  return (\n    <Link\n      to={{ pathname: `/people/${slug}` }}\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people : Person[],\n};\n\nexport const PeopleList:React.FC<Props> = ({ people }) => {\n  const { slugPerson } = useParams();\n\n  const getPersonName = (name: string | null) => {\n    if (!name) {\n      return undefined;\n    }\n\n    return people.find(person => person.name === name);\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(({\n          name, sex, born, died, slug, fatherName, motherName,\n        }) => {\n          const mother = getPersonName(motherName);\n          const father = getPersonName(fatherName);\n\n          return (\n            <tr\n              key={slug}\n              data-cy=\"person\"\n              className={classNames({\n                'has-background-warning': slug === slugPerson,\n              })}\n            >\n              <td>\n                <PersonLink person={({\n                  name, sex, born, died, slug, fatherName, motherName,\n                })}\n                />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {mother\n                  ? <PersonLink person={mother} />\n                  : motherName || <span>-</span> }\n              </td>\n              <td>\n                {father\n                  ? <PersonLink person={father} />\n                  : fatherName || <span>-</span> }\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { Person } from '../types';\nimport { Loader } from './Loader';\nimport { PeopleList } from './PeopleList';\nimport { getPeople } from '../api';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {!people.length ? (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )\n            : <PeopleList people={people} />}\n        </div>\n        {!isLoading && isError && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n      </div>\n    </>\n  );\n};\n","import {\n  NavLink, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport './App.scss';\nimport { PeoplePage } from './components/PeoplePage';\n\nconst hasActive = ({ isActive }:{ isActive: boolean }) => classNames(\n  'navbar-item', {\n    'has-background-grey-lighter': isActive,\n  },\n);\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={hasActive} to=\"/\">\n            Home\n          </NavLink>\n          <NavLink className={hasActive} to=\"/people\">\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slugPerson\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}